{"version":3,"sources":["RulesModal.js","NavBar.js","LibFascCard.js","CardGrid.js","utils.js","Game.js","LibFasc.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","outline","maxWidth","height","boxShadow","shadows","border","padding","spacing","RulesModal","props","classes","React","useState","open","setOpen","Button","color","onClick","triggerText","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","title","text","root","flexGrow","marginRight","score","paddingRight","rulesTitle","rulesText","NavBar","AppBar","position","Toolbar","Typography","variant","card","img","LibFascCard","imgPath","process","cardType","Card","CardMedia","src","alt","CardGrid","cards","slice","maxIndex","Grid","container","map","item","key","type","number","this","generateCards","n","libCards","i","push","shuffle","array","t","m","length","Math","floor","random","playAudio","url","volume","a","Audio","play","guess","paddingTop","paddingBottom","minWidth","guessButton","margin","fontSize","resetButton","resetBox","slapArea","cardGrid","minHeight","paddingLeft","playSlap","playGameOver","Guess","Box","onGuess","value","Component","GuessWrapper","cardNumber","onFailure","ResetBox","onReset","SlapArea","ResultGrid","Game","resetGame","onGameEnd","state","counter","setState","gameOver","playCard","prevState","endGame","setTimeout","best","newBest","Fragment","style","width","Container","footer","fascCards","allCards","concat","Footer","align","Link","href","Date","getFullYear","LibFasc","updateScore","bestScore","CssBaseline","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38317a51.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    outline: 0,\n    maxWidth: 400,\n    height: \"auto\",\n    boxShadow: theme.shadows[5],\n    border: '1px solid #000',\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function RulesModal(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button color=\"inherit\" onClick={handleOpen}>\n        {props.triggerText}\n      </Button>\n      <Modal\n        aria-labelledby=\"rules-modal-title\"\n        aria-describedby=\"rules-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"rules-modal-title\">{props.title}</h2>\n            <p id=\"rules-modal-description\">{props.text}</p>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport RulesModal from './RulesModal';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    marginRight: \"auto\",\n  },\n  score: {\n    paddingRight: 10,\n  },\n}));\n\nconst rulesTitle = \"LibFasc Rules\"\nconst rulesText = \"LibFasc is a simple but addicting game! \\\n  Your goal is to guess as many consective cards as possible, by \\\n  choosing either the 'Lib' or 'Fasc' button. The ratio is 6 Lib cards \\\n  to 11 Fasc cards.\"\n\nexport default function NavBar(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            LibFasc\n          </Typography>\n          <Typography variant=\"h7\" className={classes.score}>\n            Top Score: {props.score}\n          </Typography>\n          <RulesModal\n            triggerText=\"Rules\"\n            title={rulesTitle}\n            text={rulesText} />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 100,\n  },\n  img: {\n    maxWidth: 100,\n    height: \"auto\",\n  },\n});\n\nexport default function LibFascCard(props) {\n  const classes = useStyles();\n  const imgPath = process.env.PUBLIC_URL + \"/images/cards/\" + props.cardType + \".png\";\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia title={props.cardType + \"card\"}>\n        <img className={classes.img} src={imgPath} alt={props.cardType + \"card\"}/>\n      </CardMedia>\n    </Card>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport LibFascCard from './LibFascCard';\n\nexport default function CardGrid(props) {\n  const cards = props.cards.slice(0, props.maxIndex);\n\n  return (\n    <Grid container spacing={1}>\n      {cards.map(card => (\n        <Grid item key={card.key}>\n          <LibFascCard\n            cardType={card.cardType}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","function card(type, number) {\n  this.cardType = type;\n  this.key = `${type}-card-${number}`;\n}\n\nexport function generateCards(type, n) {\n  var libCards = [];\n  for (var i = 0; i < n; i++) {\n    libCards.push(new card(type, i));\n  }\n\n  return libCards;\n}\n\n// Fisher-Yates Shuffle algorithm\n// https://bost.ocks.org/mike/shuffle/\nexport function shuffle(array) {\n  var m = array.length, t, i;\n\n  // While there remain elements to shuffle…\n  while (m) {\n\n    // Pick a remaining element…\n    i = Math.floor(Math.random() * m--);\n\n    // And swap it with the current element.\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\n// play music\nexport function playAudio(url, volume = 1.0) {\n  var a = new Audio(url);\n  a.volume = volume;\n  a.play();\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\n\nimport CardGrid from './CardGrid';\n\nimport { playAudio } from './utils';\n\nconst useStyles = makeStyles(theme => ({\n  guess: {\n    backgroundColor: \"white\",\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    minWidth: 290,\n  },\n  guessButton: {\n    margin: theme.spacing(2),\n    fontSize: 40,\n  },\n  resetButton: {\n    margin: theme.spacing(2),\n    fontSize: 20,\n  },\n  resetBox: {\n    backgroundColor: \"white\",\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    minWidth: 290,\n  },\n  slapArea: {\n    flexGrow: 1,\n  },\n  cardGrid: {\n    backgroundColor: \"gainsboro\",\n    minHeight: 160 + theme.spacing(8) * 2,\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n}));\n\nconst slapSoundPath = process.env.PUBLIC_URL + \"/sounds/slap.m4a\";\nconst gameOverSoundPath = process.env.PUBLIC_URL + \"/sounds/game_over.wav\";\n\n// play slap with random volume between 0.3 and 1\nconst playSlap = () => {\n  playAudio(slapSoundPath, Math.random() * 0.7 + 0.3);\n}\nconst playGameOver = () => {\n  playAudio(gameOverSoundPath, 0.6);\n}\n\nclass Guess extends React.Component {\n  render() {\n    return (\n      <Box className={this.props.classes.guess}>\n        <Button\n          variant=\"outlined\"\n          className={this.props.classes.guessButton}\n          color=\"primary\"\n          onClick={() => this.props.onGuess(\"liberal\")}\n          value=\"liberal\">\n          LIB\n        </Button>\n        <Button\n          variant=\"outlined\"\n          className={this.props.classes.guessButton}\n          color=\"secondary\"\n          onClick={() => this.props.onGuess(\"fascist\")}\n          value=\"fascist\">\n          FASC\n        </Button>\n      </Box>\n    );\n  }\n}\n\nfunction GuessWrapper(props) {\n  const classes = useStyles();\n  return (\n    <Guess\n      classes={classes}\n      cardNumber={props.cardNumber}\n      onGuess={props.onGuess}\n      onFailure={props.onFailure}\n    />\n  );\n}\n\nfunction ResetBox(props) {\n  const classes = useStyles();\n  return (\n    <Box className={classes.resetBox}>\n      <h1>GAME OVER</h1>\n      <Button\n        variant=\"outlined\"\n        className={classes.resetButton}\n        color=\"primary\"\n        onClick={() => props.onReset()}>\n        Reset Game\n      </Button>\n    </Box>\n  );\n}\n\nfunction SlapArea(props) {\n  const classes = useStyles();\n  return (\n    <Box className={classes.slapArea} onClick={() => {playSlap()}} />\n  );\n}\n\nfunction ResultGrid(props) {\n  const classes = useStyles();\n  return (\n    <Box className={classes.cardGrid}>\n      <CardGrid cards={props.cards} maxIndex={props.cardNumber} />\n    </Box>\n  );\n}\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      best: 0,\n      gameOver: false,\n    }\n  }\n\n  resetGame = () => {\n    this.props.onGameEnd(this.state.counter - 1);\n    this.setState({\n      counter: 0,\n      gameOver: false,\n    });\n  }\n\n  playCard = () => {\n    playSlap();\n    this.setState((prevState, props) => ({\n      counter: prevState.counter + 1\n    }));\n  }\n\n  onGuess = (guess) => {\n    const actual = this.props.cards[this.state.counter].cardType;\n\n    if (guess === actual) {\n      this.playCard();\n    } else {\n      this.endGame();\n    }\n  }\n\n  endGame = () => {\n    this.playCard();\n    setTimeout(playGameOver, 500);\n    if (this.state.counter >= this.state.best) {\n      const newBest = this.state.counter;\n      this.setState({\n        best: newBest\n      });\n    }\n    this.setState({\n      gameOver: true\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <main style={{ width: '100%' }}>\n          <Container maxWidth=\"lg\">\n            <Box display=\"flex\">\n              <SlapArea />\n              { this.state.gameOver &&\n                <ResetBox onReset={this.resetGame} />\n              }\n              { !this.state.gameOver &&\n                <GuessWrapper\n                  onGuess={this.onGuess}\n                  cardNumber={this.state.counter} />\n              }\n              <SlapArea />\n            </Box>\n            <ResultGrid\n              cards={this.props.cards}\n              cardNumber={this.state.counter} />\n          </Container>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\n\nimport NavBar from './NavBar';\nimport Game from './Game';\n\nimport { generateCards, shuffle } from './utils';\n\nconst useStyles = makeStyles(theme => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst LIB_CARD_COUNT = 6;\nconst FASC_CARD_COUNT = 11;\nconst libCards = generateCards('liberal', LIB_CARD_COUNT);\nconst fascCards = generateCards('fascist', FASC_CARD_COUNT);\nconst allCards = libCards.concat(fascCards);\n\nfunction Footer() {\n  const classes = useStyles();\n  return (\n    <footer className={classes.footer}>\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://jamesbaskerville.github.io/libfasc/\">\n          LibFasc\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    </footer>\n  );\n}\n\nexport default class LibFasc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bestScore: 0,\n      cards: shuffle(allCards),\n    }\n  }\n\n  updateScore = (score) => {\n    this.setState({\n      cards: shuffle(allCards),\n    });\n    if (score > this.state.bestScore) {\n      this.setState({\n        bestScore: score,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <NavBar score={this.state.bestScore} />\n        <Game\n          cards={allCards}\n          onGameEnd={this.updateScore} />\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\n\nimport LibFasc from './LibFasc';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LibFasc />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}